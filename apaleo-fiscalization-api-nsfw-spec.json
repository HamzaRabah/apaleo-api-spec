{
  "swagger": "2.0",
  "info": {
    "title": "apaleo Fiscalization API - not safe for work",
    "description": "Continuously evolving version - use at your own risk!",
    "version": "v0-nsfw"
  },
  "host": "fiscalization.apaleo.com",
  "paths": {
    "/configuration/v0-nsfw/properties/{propertyId}": {
      "post": {
        "tags": [
          "Configuration"
        ],
        "summary": "Create a property configuration",
        "description": "Create a property configuration<br>You must have at least one of these scopes: 'fiscalization:admin, fiscalization:configuration.manage'.",
        "operationId": "ConfigurationPropertiesByPropertyIdPost",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "propertyId",
            "description": "The ID of the property.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Property configuration details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePropertyConfigurationModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content."
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "You are unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The Request-URI could not be found."
          },
          "415": {
            "description": "Unsupported media type."
          },
          "422": {
            "description": "Validation errors in the request body or query params.",
            "schema": {
              "$ref": "#/definitions/MessageItemCollection"
            }
          },
          "500": {
            "description": "An unexpected error occurred."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "security": [
          {
            "oauth2": [
              "fiscalization:admin",
              "fiscalization:configuration.manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Returns a property configuration.",
        "description": "Retrieves a property configuration by property id<br>You must have at least one of these scopes: 'fiscalization:admin, fiscalization:configuration.manage, fiscalization:configuration.read'.",
        "operationId": "ConfigurationPropertiesByPropertyIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "propertyId",
            "description": "The ID of the property.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PropertyConfigurationModel"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "You are unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The Request-URI could not be found."
          },
          "422": {
            "description": "Validation errors in the request body or query params.",
            "schema": {
              "$ref": "#/definitions/MessageItemCollection"
            }
          },
          "500": {
            "description": "An unexpected error occurred."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "security": [
          {
            "oauth2": [
              "fiscalization:admin",
              "fiscalization:configuration.manage",
              "fiscalization:configuration.read"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Configuration"
        ],
        "summary": "Partially updates the property configurations of the current account.",
        "description": "<br>You must have at least one of these scopes: 'fiscalization:admin, fiscalization:configuration.manage'.",
        "operationId": "ConfigurationPropertiesByPropertyIdPatch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "propertyId",
            "description": "The ID of the property.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The request describing the update.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Operation"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "You are unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The Request-URI could not be found."
          },
          "415": {
            "description": "Unsupported media type."
          },
          "422": {
            "description": "Validation errors in the request body or query params.",
            "schema": {
              "$ref": "#/definitions/MessageItemCollection"
            }
          },
          "500": {
            "description": "An unexpected error occurred."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "security": [
          {
            "oauth2": [
              "fiscalization:admin",
              "fiscalization:configuration.manage"
            ]
          }
        ]
      }
    },
    "/configuration/v0-nsfw/properties": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Get the list of property configurations for the current account",
        "description": "<br>You must have at least one of these scopes: 'fiscalization:admin, fiscalization:configuration.manage, fiscalization:configuration.read'.",
        "operationId": "ConfigurationPropertiesGet",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PropertyConfigurationListModel"
            }
          },
          "204": {
            "description": "There are no property configurations for the current account."
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "You are unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The Request-URI could not be found."
          },
          "422": {
            "description": "Validation errors in the request body or query params.",
            "schema": {
              "$ref": "#/definitions/MessageItemCollection"
            }
          },
          "500": {
            "description": "An unexpected error occurred."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "security": [
          {
            "oauth2": [
              "fiscalization:admin",
              "fiscalization:configuration.manage",
              "fiscalization:configuration.read"
            ]
          }
        ]
      }
    },
    "/finance/v0-nsfw/receipts": {
      "get": {
        "tags": [
          "Receipt"
        ],
        "summary": "Return a list of all receipts for the given folio",
        "description": "<br>You must have at least one of these scopes: 'fiscalization:admin, fiscalization:receipts.read'.",
        "operationId": "FinanceReceiptsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "propertyIds",
            "description": "Filter receipt list by property IDs",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "folioIds",
            "description": "Filter receipt list by folio IDs",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SlimReceiptListModel"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "You are unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "422": {
            "description": "Validation errors in the request body or query params.",
            "schema": {
              "$ref": "#/definitions/MessageItemCollection"
            }
          },
          "500": {
            "description": "An unexpected error occurred."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "security": [
          {
            "oauth2": [
              "fiscalization:admin",
              "fiscalization:receipts.read"
            ]
          }
        ]
      }
    },
    "/finance/v0-nsfw/receipts/{id}": {
      "get": {
        "tags": [
          "Receipt"
        ],
        "summary": "Returns a receipt by id",
        "description": "<br>You must have at least one of these scopes: 'fiscalization:admin, fiscalization:receipts.read'.",
        "operationId": "FinanceReceiptsByIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id of the receipt",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ReceiptModel"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "You are unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The Request-URI could not be found."
          },
          "422": {
            "description": "Validation errors in the request body or query params.",
            "schema": {
              "$ref": "#/definitions/MessageItemCollection"
            }
          },
          "500": {
            "description": "An unexpected error occurred."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "security": [
          {
            "oauth2": [
              "fiscalization:admin",
              "fiscalization:receipts.read"
            ]
          }
        ]
      }
    },
    "/finance/v0-nsfw/receipts/{id}/pdf": {
      "get": {
        "tags": [
          "Receipt"
        ],
        "summary": "Returns a pdf version of the receipt",
        "description": "<br>You must have at least one of these scopes: 'fiscalization:admin, fiscalization:receipts.read'.",
        "operationId": "FinanceReceiptsByIdPdfGet",
        "produces": [
          "application/pdf",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id of the receipt",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "You are unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The Request-URI could not be found."
          },
          "422": {
            "description": "Validation errors in the request body or query params.",
            "schema": {
              "$ref": "#/definitions/MessageItemCollection"
            }
          },
          "500": {
            "description": "An unexpected error occurred."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "security": [
          {
            "oauth2": [
              "fiscalization:admin",
              "fiscalization:receipts.read"
            ]
          }
        ]
      }
    },
    "/finance/v0-nsfw/receipts/{folioId}/bulk-pdf": {
      "get": {
        "tags": [
          "Receipt"
        ],
        "summary": "Returns a pdf file with all receipts for a given folio",
        "description": "<br>You must have at least one of these scopes: 'fiscalization:admin, fiscalization:receipts.read'.",
        "operationId": "FinanceReceiptsByFolioIdBulk-pdfGet",
        "produces": [
          "application/pdf",
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "folioId",
            "description": "the id of the folio",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "You are unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The Request-URI could not be found."
          },
          "422": {
            "description": "Validation errors in the request body or query params.",
            "schema": {
              "$ref": "#/definitions/MessageItemCollection"
            }
          },
          "500": {
            "description": "An unexpected error occurred."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "security": [
          {
            "oauth2": [
              "fiscalization:admin",
              "fiscalization:receipts.read"
            ]
          }
        ]
      }
    },
    "/finance/v0-nsfw/receipt-actions/{id}/retrysigning": {
      "put": {
        "tags": [
          "ReceiptActions"
        ],
        "summary": "Unsafe: allows you to trigger receipt signing again",
        "description": "<br>You must have this scope: 'fiscalization:admin'.",
        "operationId": "FinanceReceipt-actionsByIdRetrysigningPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id of the receipt",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content."
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "You are unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The Request-URI could not be found."
          },
          "422": {
            "description": "Validation errors in the request body or query params.",
            "schema": {
              "$ref": "#/definitions/MessageItemCollection"
            }
          },
          "500": {
            "description": "An unexpected error occurred."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "security": [
          {
            "oauth2": [
              "fiscalization:admin"
            ]
          }
        ]
      }
    },
    "/finance/v0-nsfw/receipt-actions/{id}/retryrendering": {
      "put": {
        "tags": [
          "ReceiptActions"
        ],
        "summary": "Unsafe: allows you to trigger receipt rendering again",
        "description": "<br>You must have this scope: 'fiscalization:admin'.",
        "operationId": "FinanceReceipt-actionsByIdRetryrenderingPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id of the receipt",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content."
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "You are unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The Request-URI could not be found."
          },
          "422": {
            "description": "Validation errors in the request body or query params.",
            "schema": {
              "$ref": "#/definitions/MessageItemCollection"
            }
          },
          "500": {
            "description": "An unexpected error occurred."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "security": [
          {
            "oauth2": [
              "fiscalization:admin"
            ]
          }
        ]
      }
    },
    "/finance/v0-nsfw/snapshots": {
      "get": {
        "tags": [
          "Snapshot"
        ],
        "summary": "Returns the snapshots for a specific folio",
        "description": "<br>You must have at least one of these scopes: 'fiscalization:admin, fiscalization:snapshots.get'.",
        "operationId": "FinanceSnapshotsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "folioId",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SnapshotListModel"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "You are unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "422": {
            "description": "Validation errors in the request body or query params.",
            "schema": {
              "$ref": "#/definitions/MessageItemCollection"
            }
          },
          "500": {
            "description": "An unexpected error occurred."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "security": [
          {
            "oauth2": [
              "fiscalization:admin",
              "fiscalization:snapshots.get"
            ]
          }
        ]
      }
    },
    "/finance/v0-nsfw/snapshots/{snapshotId}": {
      "get": {
        "tags": [
          "Snapshot"
        ],
        "summary": "Returns a specic snapshot",
        "description": "<br>You must have at least one of these scopes: 'fiscalization:admin, fiscalization:snapshots.get'.",
        "operationId": "FinanceSnapshotsBySnapshotIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "snapshotId",
            "description": "The snapshotId to get the snapshot for",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SnapshotModel"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "You are unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The Request-URI could not be found."
          },
          "422": {
            "description": "Validation errors in the request body or query params.",
            "schema": {
              "$ref": "#/definitions/MessageItemCollection"
            }
          },
          "500": {
            "description": "An unexpected error occurred."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "security": [
          {
            "oauth2": [
              "fiscalization:admin",
              "fiscalization:snapshots.get"
            ]
          }
        ]
      }
    },
    "/finance/v0-nsfw/snapshots/{folioId}/latest": {
      "get": {
        "tags": [
          "Snapshot"
        ],
        "summary": "Returns the latest created snapshot for a specific folio",
        "description": "<br>You must have at least one of these scopes: 'fiscalization:admin, fiscalization:snapshots.get'.",
        "operationId": "FinanceSnapshotsByFolioIdLatestGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "folioId",
            "description": "The folioId to return the latest snapshot for",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SnapshotModel"
            }
          },
          "204": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "You are unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The Request-URI could not be found."
          },
          "422": {
            "description": "Validation errors in the request body or query params.",
            "schema": {
              "$ref": "#/definitions/MessageItemCollection"
            }
          },
          "500": {
            "description": "An unexpected error occurred."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "security": [
          {
            "oauth2": [
              "fiscalization:admin",
              "fiscalization:snapshots.get"
            ]
          }
        ]
      }
    },
    "/finance/v0-nsfw/snapshot-actions/{id}/reprocess": {
      "put": {
        "tags": [
          "SnapshotActions"
        ],
        "summary": "Triggers the snapshot processing for an unfinished snapshot with\r\nUnknown FiscalizationStatus",
        "description": "<br>You must have this scope: 'fiscalization:admin'.",
        "operationId": "FinanceSnapshot-actionsByIdReprocessPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Snapshot Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "You are unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The Request-URI could not be found."
          },
          "422": {
            "description": "Validation errors in the request body or query params.",
            "schema": {
              "$ref": "#/definitions/MessageItemCollection"
            }
          },
          "500": {
            "description": "An unexpected error occurred."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "security": [
          {
            "oauth2": [
              "fiscalization:admin"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "CreatePropertyConfigurationModel": {
      "required": [
        "countryCode"
      ],
      "type": "object",
      "properties": {
        "countryCode": {
          "type": "string"
        }
      },
      "example": "{\n  \"countryCode\": \"DE\"\n}"
    },
    "LineItemModel": {
      "required": [
        "amount",
        "id",
        "isPosted",
        "lineItemCreatedDate",
        "name",
        "quantity",
        "serviceDate",
        "vatInfo"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "lineItemCreatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/MonetaryValueModel"
        },
        "serviceDate": {
          "type": "string"
        },
        "isPosted": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "quantity": {
          "format": "int32",
          "type": "integer"
        },
        "vatInfo": {
          "$ref": "#/definitions/VatInfoModel"
        }
      }
    },
    "LineItemPaymentModel": {
      "required": [
        "amount",
        "lineItemId",
        "paymentId"
      ],
      "type": "object",
      "properties": {
        "lineItemId": {
          "type": "string"
        },
        "paymentId": {
          "type": "string"
        },
        "amount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "MessageItemCollection": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "MonetaryValueModel": {
      "required": [
        "amount",
        "currency"
      ],
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "amount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Operation": {
      "type": "object",
      "properties": {
        "value": {
          
        },
        "path": {
          "type": "string"
        },
        "op": {
          "type": "string"
        },
        "from": {
          "type": "string"
        }
      }
    },
    "PaymentModel": {
      "required": [
        "amount",
        "fiscalizationStatus",
        "id",
        "method",
        "originatingClientId",
        "paymentDate",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "paymentDate": {
          "format": "date-time",
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/MonetaryValueModel"
        },
        "method": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "originatingClientId": {
          "type": "string"
        },
        "fiscalizationStatus": {
          "enum": [
            "Unknown",
            "Invalid",
            "NotRequired",
            "Required"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "FiscalizationStatus",
            "modelAsString": false
          }
        },
        "paymentParts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItemPaymentModel"
          }
        }
      }
    },
    "PropertyConfigurationListModel": {
      "required": [
        "configurations"
      ],
      "type": "object",
      "properties": {
        "configurations": {
          "description": "List of property configurations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PropertyConfigurationModel"
          }
        }
      },
      "example": "{\n  \"configurations\": [\n    {\n      \"created\": \"0001-01-01T00:00:00Z\",\n      \"propertyId\": \"BER\",\n      \"taxId\": \"135689\",\n      \"countryCode\": \"DE\",\n      \"excludedClientIds\": [\n        \"EXCLUDED\",\n        \"CLIENTID\"\n      ]\n    },\n    {\n      \"created\": \"0001-01-01T00:00:00Z\",\n      \"propertyId\": \"MUC\",\n      \"taxId\": \"024680\",\n      \"countryCode\": \"DE\",\n      \"excludedClientIds\": [\n        \"EXCLUDED\",\n        \"CLIENTID\"\n      ]\n    }\n  ]\n}"
    },
    "PropertyConfigurationModel": {
      "required": [
        "countryCode",
        "created",
        "propertyId",
        "taxId",
        "timezone"
      ],
      "type": "object",
      "properties": {
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "propertyId": {
          "type": "string"
        },
        "taxId": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "excludedClientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "example": "{\n  \"created\": \"2020-05-05T01:01:00Z\",\n  \"propertyId\": \"BER\",\n  \"taxId\": \"157891\",\n  \"countryCode\": \"DE\",\n  \"timezone\": \"Eupore/Berlin\",\n  \"excludedClientIds\": [\n    \"EXCLUDED\",\n    \"CLIENTID\"\n  ]\n}"
    },
    "ReceiptLineItemModel": {
      "required": [
        "id",
        "name",
        "paidAmount",
        "quantity",
        "totalAmount"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the charge",
          "type": "string"
        },
        "paidAmount": {
          "$ref": "#/definitions/MonetaryValueModel"
        },
        "totalAmount": {
          "$ref": "#/definitions/MonetaryValueModel"
        },
        "name": {
          "description": "The name of the charge",
          "type": "string"
        },
        "quantity": {
          "format": "int32",
          "description": "The quantity of the charge",
          "type": "integer"
        },
        "taxes": {
          "description": "Tax details breakdown for this charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxAmountModel"
          }
        }
      }
    },
    "ReceiptModel": {
      "required": [
        "id",
        "lineItems",
        "payments",
        "receiptTime",
        "status",
        "total",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the receipt",
          "type": "string"
        },
        "number": {
          "description": "The number of the receipt, assigned by an external service",
          "type": "string"
        },
        "type": {
          "description": "Receipt type: Initial, Cancellation, Correction",
          "enum": [
            "Initial",
            "Cancellation",
            "Correction"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ReceiptType",
            "modelAsString": false
          }
        },
        "status": {
          "description": "Current receipt status",
          "enum": [
            "Pending",
            "Signed",
            "SigningFailed",
            "Rendered",
            "RenderingFailed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ReceiptStatus",
            "modelAsString": false
          }
        },
        "receiptTime": {
          "format": "date-time",
          "description": "Date and time of the receipt",
          "type": "string"
        },
        "payments": {
          "description": "The list of payments for this receipt",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReceiptPaymentModel"
          }
        },
        "lineItems": {
          "description": "The list of line items for this receipt",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReceiptLineItemModel"
          }
        },
        "total": {
          "$ref": "#/definitions/MonetaryValueModel"
        },
        "previousReceipt": {
          "$ref": "#/definitions/RelatedReceiptModel"
        },
        "metadata": {
          "description": "Optional metadata, containing country-specific metadata for the receipt",
          "type": "string"
        }
      },
      "example": "{\n  \"id\": \"FDASFASFS-1\",\n  \"number\": \"1001\",\n  \"type\": \"Initial\",\n  \"status\": \"Pending\",\n  \"receiptTime\": \"2020-05-20T00:00:00Z\",\n  \"payments\": [\n    {\n      \"id\": \"ASFASFAS\",\n      \"amount\": {\n        \"currency\": \"EUR\",\n        \"amount\": 50.45\n      },\n      \"name\": \"PaymentOne\"\n    }\n  ],\n  \"lineItems\": [\n    {\n      \"id\": \"ASFSAFSAF\",\n      \"paidAmount\": {\n        \"currency\": \"EUR\",\n        \"amount\": 100.0\n      },\n      \"totalAmount\": {\n        \"currency\": \"EUR\",\n        \"amount\": 100.0\n      },\n      \"name\": \"Bike rental\",\n      \"quantity\": 1,\n      \"taxes\": [\n        {\n          \"type\": \"Normal\",\n          \"percent\": 7.0,\n          \"amount\": 12.0\n        }\n      ]\n    }\n  ],\n  \"total\": {\n    \"currency\": \"EUR\",\n    \"amount\": 100.0\n  },\n  \"previousReceipt\": {\n    \"id\": \"FDASFASFS-0\",\n    \"number\": \"1000\"\n  }\n}"
    },
    "ReceiptPaymentModel": {
      "required": [
        "amount",
        "id",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the payment",
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/MonetaryValueModel"
        },
        "name": {
          "description": "The name of the payment",
          "type": "string"
        }
      }
    },
    "RelatedReceiptModel": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the receipt",
          "type": "string"
        },
        "number": {
          "description": "The number of the receipt, assigned by an external service",
          "type": "string"
        }
      }
    },
    "SlimReceiptListModel": {
      "required": [
        "count"
      ],
      "type": "object",
      "properties": {
        "receipts": {
          "description": "The list of receipts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SlimReceiptModel"
          }
        },
        "count": {
          "format": "int64",
          "type": "integer"
        }
      },
      "example": "{\n  \"receipts\": [\n    {\n      \"id\": \"FDASFASFS-1\",\n      \"number\": \"1001\",\n      \"type\": \"Initial\",\n      \"status\": \"Pending\",\n      \"receiptTime\": \"2020-05-20T00:00:00Z\",\n      \"paymentIds\": [\n        \"SAFSAFSD\"\n      ],\n      \"total\": {\n        \"currency\": \"EUR\",\n        \"amount\": 100.0\n      }\n    }\n  ],\n  \"count\": 0\n}"
    },
    "SlimReceiptModel": {
      "required": [
        "id",
        "paymentIds",
        "receiptTime",
        "status",
        "total",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the receipt",
          "type": "string"
        },
        "number": {
          "description": "The number of the receipt, assigned by an external service",
          "type": "string"
        },
        "type": {
          "description": "Receipt type: Initial, Cancellation, Correction",
          "enum": [
            "Initial",
            "Cancellation",
            "Correction"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ReceiptType",
            "modelAsString": false
          }
        },
        "status": {
          "description": "Current receipt status",
          "enum": [
            "Pending",
            "Signed",
            "SigningFailed",
            "Rendered",
            "RenderingFailed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ReceiptStatus",
            "modelAsString": false
          }
        },
        "receiptTime": {
          "format": "date-time",
          "description": "Date and time of the receipt",
          "type": "string"
        },
        "paymentIds": {
          "description": "The list of payment ids included in the receipt",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "total": {
          "$ref": "#/definitions/MonetaryValueModel"
        }
      }
    },
    "SnapshotListItemModel": {
      "required": [
        "folioEvent",
        "folioId",
        "folioUpdatedDate",
        "id",
        "propertyId",
        "status"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "folioId": {
          "type": "string"
        },
        "propertyId": {
          "type": "string"
        },
        "folioUpdatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "enum": [
            "Unknown",
            "Invalid",
            "NotRequired",
            "Required"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "FiscalizationStatus",
            "modelAsString": false
          }
        },
        "folioEvent": {
          "type": "string"
        }
      }
    },
    "SnapshotListModel": {
      "required": [
        "count"
      ],
      "type": "object",
      "properties": {
        "snapshots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SnapshotListItemModel"
          }
        },
        "count": {
          "format": "int64",
          "type": "integer"
        }
      },
      "example": "{\n  \"snapshots\": [\n    {\n      \"id\": \"IDDQD-1-1-1\",\n      \"folioId\": \"IDDQD-1-1\",\n      \"propertyId\": \"MUC\",\n      \"folioUpdatedDate\": \"2020-05-05T01:01:00Z\",\n      \"status\": \"Required\",\n      \"folioEvent\": \"closed\"\n    }\n  ],\n  \"count\": 1\n}"
    },
    "SnapshotModel": {
      "required": [
        "folioId",
        "folioUpdatedDate",
        "id",
        "propertyId",
        "status"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "folioId": {
          "type": "string"
        },
        "propertyId": {
          "type": "string"
        },
        "folioUpdatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "enum": [
            "Unknown",
            "Invalid",
            "NotRequired",
            "Required"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "FiscalizationStatus",
            "modelAsString": false
          }
        },
        "lineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItemModel"
          }
        },
        "payments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentModel"
          }
        },
        "folioEvent": {
          "type": "string"
        }
      },
      "example": "{\n  \"id\": \"IDDQD-1-1-1\",\n  \"folioId\": \"IDDQD-1-1\",\n  \"propertyId\": \"MUC\",\n  \"folioUpdatedDate\": \"2020-05-05T01:01:00Z\",\n  \"status\": \"Required\",\n  \"lineItems\": [\n    {\n      \"id\": \"IDDQD-1-1-D-1\",\n      \"lineItemCreatedDate\": \"2020-05-05T01:01:00Z\",\n      \"amount\": {\n        \"currency\": \"EUR\",\n        \"amount\": 100.0\n      },\n      \"serviceDate\": \"2020-05-05\",\n      \"isPosted\": true,\n      \"name\": \"Double room\",\n      \"quantity\": 1,\n      \"vatInfo\": {\n        \"type\": \"Normal\",\n        \"percent\": 20.0\n      }\n    }\n  ],\n  \"payments\": [\n    {\n      \"id\": \"IDKFA\",\n      \"paymentDate\": \"2020-05-05T01:01:00Z\",\n      \"amount\": {\n        \"currency\": \"EUR\",\n        \"amount\": 100.0\n      },\n      \"method\": \"Visa\",\n      \"fiscalizationStatus\": \"NotRequired\",\n      \"paymentParts\": [\n        {\n          \"lineItemId\": \"IDDQD-1-1-D-1\",\n          \"paymentId\": \"IDKFA\",\n          \"amount\": 100.0\n        }\n      ]\n    }\n  ],\n  \"folioEvent\": \"closed\"\n}"
    },
    "TaxAmountModel": {
      "required": [
        "amount",
        "percent",
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "The VAT type",
          "enum": [
            "Null",
            "VeryReduced",
            "Reduced",
            "Normal",
            "Without",
            "Special",
            "ReducedCovid19",
            "NormalCovid19"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "VatType",
            "modelAsString": false
          }
        },
        "percent": {
          "format": "double",
          "description": "The currently valid percent to calculate the VAT",
          "type": "number"
        },
        "amount": {
          "format": "double",
          "description": "The tax amount",
          "type": "number"
        }
      }
    },
    "VatInfoModel": {
      "required": [
        "percent",
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "Null",
            "VeryReduced",
            "Reduced",
            "Normal",
            "Without",
            "Special",
            "ReducedCovid19",
            "NormalCovid19"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "VatType",
            "modelAsString": false
          }
        },
        "percent": {
          "format": "double",
          "type": "number"
        }
      }
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://identity.apaleo.com/connect/authorize",
      "scopes": {
        "fiscalization:admin": "Full access to Fiscalization configuration"
      }
    }
  }
}
